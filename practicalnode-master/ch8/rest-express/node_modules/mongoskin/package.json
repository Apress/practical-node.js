{
  "name": "mongoskin",
  "description": "The future layer above node-mongodb-native",
  "version": "1.4.1",
  "author": {
    "name": "Gui Lin",
    "email": "guileen@gmail.com"
  },
  "homepage": "https://github.com/kissjs/node-mongoskin",
  "repository": {
    "type": "git",
    "url": "git://github.com/kissjs/node-mongoskin.git"
  },
  "bugs": {
    "url": "https://github.com/kissjs/node-mongoskin/issues"
  },
  "main": "./index.js",
  "keywords": [
    "mongodb",
    "database",
    "nosql"
  ],
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {
    "mongodb": "1.4.1"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "blanket": "~1.1.6",
    "coveralls": "~2.10.0",
    "mocha-lcov-reporter": "0.0.1",
    "travis-cov": "~0.2.5",
    "should": "~3.1.2"
  },
  "config": {
    "blanket": {
      "pattern": "mongoskin/lib"
    },
    "travis-cov": {
      "threshold": 95
    }
  },
  "scripts": {
    "test": "mocha -R travis-cov"
  },
  "directories": {
    "example": "./examples",
    "lib": "./lib/mongoskin"
  },
  "license": "MIT",
  "contributors": [
    {
      "name": "Gui Lin",
      "email": "guileen@gmail.com",
      "url": "https://github.com/guileen"
    },
    {
      "name": "François de Metz",
      "email": "francois@2metz.fr",
      "url": "https://github.com/francois2metz"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "http://fengmk2.github.com"
    },
    {
      "name": "Quang Van",
      "email": "quangvvv@gmail.com",
      "url": "https://github.com/quangv"
    },
    {
      "name": "Matt Perpick",
      "email": "clutchski@gmail.com",
      "url": "https://github.com/clutchski"
    },
    {
      "name": "humanchimp",
      "email": "morphcham@gmail.com",
      "url": "https://github.com/humanchimp"
    },
    {
      "name": "Joe Faber",
      "email": "joe.faber@mandiant.com",
      "url": "https://github.com/jlfaber"
    },
    {
      "name": "Harvey McQueen",
      "email": "hmcqueen@gmail.com",
      "url": "https://github.com/hmcqueen"
    },
    {
      "name": "Paul Gebheim",
      "email": "pgebheim@monkeyinferno.com",
      "url": "https://github.com/paulirish"
    },
    {
      "name": "Aneil Mallavarapu",
      "email": "aneil@blipboard.com",
      "url": "https://github.com/amallavarapu"
    },
    {
      "name": "wmertens",
      "email": "Wout.Mertens@gmail.com",
      "url": "https://github.com/wmertens"
    },
    {
      "name": "Rakshit Menpara",
      "email": "deltasquare4@gmail.com",
      "url": "https://github.com/deltasquare4"
    }
  ],
  "readme": "# mongoskin\n\n[![Build Status](https://secure.travis-ci.org/kissjs/node-mongoskin.png)](http://travis-ci.org/kissjs/node-mongoskin)\n[![Dependencies](https://david-dm.org/kissjs/node-mongoskin.png)](https://david-dm.org/kissjs/node-mongoskin)\n[![Coverage Status](https://coveralls.io/repos/kissjs/node-mongoskin/badge.png?branch=master)](https://coveralls.io/r/kissjs/node-mongoskin?branch=master)\n[![NPM version](https://badge.fury.io/js/mongoskin.png)](http://badge.fury.io/js/mongoskin)\n\n[![NPM](https://nodei.co/npm/mongoskin.png?downloads=true&stars=true)](https://nodei.co/npm/mongoskin/)\n\nInstall\n========\n\n```bash\n$ npm install mongoskin\n```\n\nUsage\n========\n\nUse dburl\n\n```js\nvar mongo = require('mongoskin');\nvar db = mongo.db(\"mongodb://localhost:27017/integration_tests\", {native_parser:true});\ndb.bind('article');\ndb.article.find().toArray(function(err, items) {\n        db.close();\n});\n```\n\nUse ReplSet\n\n```js\nvar mongo = require('mongoskin');\nvar Server = mongo.Server;\nvar Db = mongo.Db;\n\nvar replSet = new ReplSetServers([\n        new Server('localhost', 30000),\n        new Server('localhost', 30001),\n        new Server('localhost', 30002),\n]);\n\nvar db = new Db('integration_test_', replSet, {w:0, native_parser: (process.env['TEST_NATIVE'] != null)});\n// no need open and on('fullsetup', ...)\ndb.collection('myconnection').find().setReadPreference(ReadPreference.SECONDARY).toArray(function(err, items) {\n        db.close();\n});\n```\n\nModel helper:\n\n```js\nvar mongo = require('mongoskin');\nvar db = mongo.db(\"mongodb://localhost:27017/integration_tests\", {native_parser:true});\ndb.bind('article').bind({\n    getByAuthor: function(author_id, callback) {\n        this.findOne({author_id: author_id}, callback);\n    }\n});\ndb.article.getByAuthor(author_id, function(err, article) {\n        console.log(article);\n});\n```\n\n## Origin API part\nFor detail API reference see [node mongodb API](http://mongodb.github.io/node-mongodb-native/). Mongoskin is just change the API call chain.\n\nWe make some common use functions in promise mode, we call it SkinClass of a normal Class. And the API is almost same with official API.\n\n### module\n\norigin:\n```js\nvar mongo = require('mongodb');\nvar Db = mongo.Db;\nvar Server = mongo.Server;\nvar MongoClient = mongo.MongoClient;\nvar ReplSetServers = mongo.ReplSetServers;\n...\n```\n\nmongoskin:\n\n```js\nvar mongo = require('mongoskin');\nvar Db = mongo.Db;\nvar Server = mongo.Server;\nvar MongoClient = mongo.MongoClient;\nvar ReplSetServers = mongo.ReplSetServers;\n...\n```\n\n### MongoClient.connect(...)\n\nreturns a `Db` instance\n\nalias origin `MongoClient.connect(..., function(err, db) { .... })`\n\norigin:\n\n```js\nMongoClient.connect(..., function(err, db) {\n})\n```\n\nmongoskin:\n\n```js\nvar db = MongoClient.connect(...)\n```\n\n### db.collection(..., [callback])\n\nreturns a `Collection` instance\n\nalias origin `db.collection(..., function(err, collection) {....})`\n\norigin:\n\n```js\nvar db = new Db(...);\ndb.open(function(err, db) {\n    db.collection('myCollection', {strict: true}, function(err, myCollection) {\n        // myCollection.find() ...\n    });\n});\n```\n\nmongoskin:\n\n```js\nvar db = new Db(...);\nvar myCollection = db.collection('myCollection', {strict: true});\n```\n\n## MongoSkin API part\n\n### module.db(...)\nalias `MongoClient.connect(...)`\n### module.helper.toObjectID(hexStr)\nconvert `String` to `ObjectID` instance.\n### db.bind(name, options)\nalias `db[name] = db.collection(name, options)`\n\n```js\ndb.bind('article')\ndb.article.find().toArray(function(err, items) {\n  assert.ok(err == null);\n});\n```\n\n### db.admin(...)\nalias `new Admin(db, ...)`\n### db.grid(...)\nalias `new Grid(db, ...)`\n### db.gridStore(...)\nalias `new GridStore(db, ...)`\n### collection.bind(extendObject)\neach method of extendObject will be bind to collection.\n### collection.findById(id, ...)\nalias `collection.find({_id: toObjectID(id)}, ...)`\n### collection.updateById(id, ...)\nalias `collection.update({_id: toObjectID(id)}, ...)`\n### collection.removeById(id, ...)\nalias `collection.remove({_id: toObjectID(id)}, ...)`\n\n## NOTE!! mongoskin API change from 1.3.20\n\nSince node-mongodb-native has change a lot of API, mongoskin redesign from 1.3.20. The version number keep same with node-mongodb-native. And the API appearence is also keep same with node-mongodb-native\n\n### Removed API from mongoskin 1.3.20\n\n* module.bind\n* module.Skin*\n* module.router\n* skinDb.toId\n* skinDb.toObjectId\n* skinDb.gridfs\n* skinCollection.bind\n\n### Modified API from mongoskin 1.3.20\n\n* module.db\n* skinDb.bind\n\n\n### Additional API from mongoskin 1.3.20\n\n* module.MongoClient\n* module.Grid\n* module.GridStore\n* module.helper.toObjectID\n\n## Authors\n\nBelow is the output from `git-summary`.\n\n```\n project  : node-mongoskin\n repo age : 2 years, 10 months\n active   : 84 days\n commits  : 180\n files    : 44\n authors  :\n    49\tLin Gui                 27.2%\n    44\tfengmk2                 24.4%\n    34\tguilin 桂林           18.9%\n    23\tGui Lin                 12.8%\n     5\tguilin                  2.8%\n     2\tRaghu Katti             1.1%\n     2\tMerlyn Albery-Speyer    1.1%\n     2\tPaul Gebheim            1.1%\n     2\tJoakim B                1.1%\n     2\tFrançois de Metz       1.1%\n     1\tWout Mertens            0.6%\n     1\tYuriy Nemtsov           0.6%\n     1\tfresheneesz             0.6%\n     1\thumanchimp              0.6%\n     1\tAlan Shaw               0.6%\n     1\twmertens                0.6%\n     1\tAneil Mallavarapu       0.6%\n     1\tGustav                  0.6%\n     1\tHarvey McQueen          0.6%\n     1\tJoe Faber               0.6%\n     1\tMatt Perpick            0.6%\n     1\tPhilmod                 0.6%\n     1\tQuang Van               0.6%\n     1\tRakshit Menpara         0.6%\n     1\tShawn Jonnet            0.6%\n```\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 - 2012 kissjs.org\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "mongoskin@1.4.1",
  "_shasum": "f9a72b05f16dfeb9f61c0f4efbd56c3990931c81",
  "_from": "mongoskin@1.4.1",
  "_resolved": "https://registry.npmjs.org/mongoskin/-/mongoskin-1.4.1.tgz"
}
